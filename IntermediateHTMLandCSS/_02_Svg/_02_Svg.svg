// SVG(Scalable Vector Graphics)
// 크기를 조절하더라도 화질에 영향x
// XML(Extensible Markup Language)로 쓰였기 때문에, 읽을 수 있고, HTML과 상호 운용 가능.
// 다만 아주 작은 부분까찌 XML로 작성해야 하므로 복잡한 이미지는 만들기 힘듬.

<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
    <rect x=0 y=0 width=100 height=50 />
    <circle class="svg-circle" cx="50" cy="50" r="10"/>
</svg>

// SVG이미지는 linked / inline 방식으로 배치할 수 있다.
// 1. linked
// HTML에서 img 태그 안에 넣거나, background-img: url(./my-image.svg)와 같이 CSS에 링크할 수 있다.
// 하지만 SVG파일을 웹페이지에서 접근할 수 없다.
// 2. inline
// 웹페이지의 코드에 직접 SVG를 집어넣음으로써 CSS나 JavaScript로 동적 접근이 가능해진다.
// 하지만, 코드의 가독성이 떨어지고, less cacheable해지며, 큰 SVG의 경우 나머지 HTML의 로딩이 느려질 수 있다.
// 이러한 단점은 React와 같은 JavaScript library, 또는 webpack과 같은 build-tool로 극복 가능하다.
//